
#pragma once
#ifndef TEST_CASE_H
#define TEST_CASE_H

#ifdef __cplusplus
extern "C" {
#endif


#include <stdint.h>
#include <stdbool.h>

// Compiler feature macros adapted from Hedley (public domain)
// https://github.com/nemequ/hedley

#if defined(__has_builtin)
#  define EXO_HAS_BUILTIN(builtin) __has_builtin(builtin)
#else
#  define EXO_HAS_BUILTIN(builtin) (0)
#endif

#if EXO_HAS_BUILTIN(__builtin_assume)
#  define EXO_ASSUME(expr) __builtin_assume(expr)
#elif EXO_HAS_BUILTIN(__builtin_unreachable)
#  define EXO_ASSUME(expr) \
      ((void)((expr) ? 1 : (__builtin_unreachable(), 1)))
#else
#  define EXO_ASSUME(expr) ((void)(expr))
#endif

typedef struct test_case_Context { 

    struct ConfigLoadAcc {
        bool stride_set;
    } ConfigLoadAcc;

    struct ConfigLoad_id1 {
        int_fast32_t src_stride;
    } ConfigLoad_id1;

    struct ConfigMatmul {
        bool done;
    } ConfigMatmul;

    struct ConfigStore {
        float scale;
        int_fast32_t dst_stride;
        bool act;
    } ConfigStore;

} test_case_Context;
#include <stdio.h>
#include <stdlib.h>

#ifndef EXO_WIN_2I32C
#define EXO_WIN_2I32C
struct exo_win_2i32c{
    const int32_t * const data;
    const int_fast32_t strides[2];
};
#endif
#ifndef EXO_WIN_2I8
#define EXO_WIN_2I8
struct exo_win_2i8{
    int8_t * const data;
    const int_fast32_t strides[2];
};
#endif
#ifndef EXO_WIN_2I8C
#define EXO_WIN_2I8C
struct exo_win_2i8c{
    const int8_t * const data;
    const int_fast32_t strides[2];
};
#endif
// conv_17(
//     output : i8[4, 28, 28, 128] @DRAM,
//     bias : i32[1, 128] @DRAM,
//     inp : i8[4, 30, 30, 128] @DRAM,
//     weights : i8[3, 3, 128, 128] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_17( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );

// conv_17_cpu(
//     output : i8[4, 28, 28, 128] @DRAM,
//     bias : i32[1, 128] @DRAM,
//     inp : i8[4, 30, 30, 128] @DRAM,
//     weights : i8[3, 3, 128, 128] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_17_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );

// conv_3(
//     output : i8[4, 56, 56, 64] @DRAM,
//     bias : i32[1, 64] @DRAM,
//     inp : i8[4, 58, 58, 64] @DRAM,
//     weights : i8[3, 3, 64, 64] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_3( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );

// conv_30(
//     output : i8[4, 14, 14, 256] @DRAM,
//     bias : i32[1, 256] @DRAM,
//     inp : i8[4, 16, 16, 256] @DRAM,
//     weights : i8[3, 3, 256, 256] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_30( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );

// conv_30_cpu(
//     output : i8[4, 14, 14, 256] @DRAM,
//     bias : i32[1, 256] @DRAM,
//     inp : i8[4, 16, 16, 256] @DRAM,
//     weights : i8[3, 3, 256, 256] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_30_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );

// conv_3_cpu(
//     output : i8[4, 56, 56, 64] @DRAM,
//     bias : i32[1, 64] @DRAM,
//     inp : i8[4, 58, 58, 64] @DRAM,
//     weights : i8[3, 3, 64, 64] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_3_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale );



#ifdef __cplusplus
}
#endif
#endif  // TEST_CASE_H

#include "test_case.h"

#include <include/gemmini.h>
#include "gemm_acc_malloc.h"
#include <include/gemmini.h>
#include "gemm_malloc.h"
#ifndef EXO_WIN_2I32
#define EXO_WIN_2I32
struct exo_win_2i32{
    int32_t * const data;
    const int_fast32_t strides[2];
};
#endif
#ifndef EXO_WIN_3I8
#define EXO_WIN_3I8
struct exo_win_3i8{
    int8_t * const data;
    const int_fast32_t strides[3];
};
#endif
int8_t _relu_int8_t(int8_t x) {
    if (x > 0.0) return x;
    else return 0.0;
}

float _select_float(float x,float v,float y,float z) {
    if (x < v) return y;
    else return z;
}

// clamp(
//     src : f32 @DRAM,
//     dst : i8 @DRAM
// )
static void clamp( test_case_Context *ctxt, const float* src, int8_t* dst );


/* relying on the following instruction..."
acc_scale(src,dst,scale)
{dst}[0] = ACC_SCALE({src}[0], {scale}[0]);
*/
// clamp(
//     src : f32 @DRAM,
//     dst : i8 @DRAM
// )
static void clamp( test_case_Context *ctxt, const float* src, int8_t* dst ) {
float l;
float h;
l = -128.0f;
h = 127.0f;
float tmp;
tmp = _select_float((float)h, (float)*src, (float)h, (float)*src);
tmp = _select_float((float)*src, (float)l, (float)l, (float)tmp);
*dst = (int8_t)(tmp);
}


/* relying on the following instruction..."
config_ld_acc_i32_vector(stride_set)
gemmini_extended3_config_ld(0, 1.0f, 0, 0);

*/

/* relying on the following instruction..."
config_ld_i8_id1(src_stride)
gemmini_extended3_config_ld({src_stride}, 1.0f, 0, 1);

*/

/* relying on the following instruction..."
config_matmul()
gemmini_extended_config_ex(WS, 0, 0, 1, 0, 0);

*/

/* relying on the following instruction..."
config_st_acc_i8(scale,dst_stride,act)
gemmini_extended_config_st({dst_stride}, {act}, {scale}[0]);

*/
// conv_17(
//     output : i8[4, 28, 28, 128] @DRAM,
//     bias : i32[1, 128] @DRAM,
//     inp : i8[4, 30, 30, 128] @DRAM,
//     weights : i8[3, 3, 128, 128] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_17( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
gemmini_extended_config_st((128), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((128), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

for (int_fast32_t bo = 0; bo < 1; bo++) {
  int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 3 * 16 * sizeof(int8_t)));
  int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 8 * 3 * 3 * sizeof(int8_t)));
  int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 16 * 8 * sizeof(int32_t)));
  for (int_fast32_t bi = 0; bi < 4; bi++) {
    for (int_fast32_t orow_o = 0; orow_o < 2; orow_o++) {
      for (int_fast32_t orow_i = 0; orow_i < 14; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[0]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[16]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[32]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[48]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[64]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[80]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[96]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[112]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))), 16, (16) );
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 128], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 128], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 128 + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + 128 + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + 2048 + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (2) * (128)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (2) * (128)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (2) * (128) + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (2) * (128) + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + 256)/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (2) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (3) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (4) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (5) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (6) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (6144) + (2) * (2048) + (7) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
        }
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 16]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 32]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 48]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 64]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (256))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 80]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (256))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 96]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (256))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + 112]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (256))/16)), (16), (16) );
      }
    }
  }
  gemm_acc_free((uint32_t)(res));
  gemm_free((uint64_t)(w_s));
  gemm_free((uint64_t)(i_s));
}
for (int_fast32_t bo = 0; bo < 1; bo++) {
  int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 12 * 8 * 3 * 16 * sizeof(int8_t)));
  int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 8 * 3 * 3 * sizeof(int8_t)));
  int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 13 * 8 * sizeof(int32_t)));
  for (int_fast32_t bi = 0; bi < 4; bi++) {
    for (int_fast32_t orow_o = 0; orow_o < 2; orow_o++) {
      for (int_fast32_t orow_i = 0; orow_i < 14; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[0]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[16]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[32]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[48]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[64]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[80]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[96]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[112]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))), 16, (12) );
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (16) * (128)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (16) * (128)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (16) * (128) + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (16) * (128) + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + 16384 + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (17) * (128)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (17) * (128)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (17) * (128) + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (17) * (128) + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + 16384 + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + 1536 + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (16) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (32) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (48) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (64) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (80) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (96) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
                for (int_fast32_t och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (49152) + (2) * (16384) + (112) * (128) + 64 * och_o_o], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (4 * och_o_o) * (256))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (18) * (128)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (18) * (128)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (18) * (128) + 64], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (115200) + (krow + orow_i + 14 * orow_o) * (3840) + (18) * (128) + 64], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + 2048 + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + 192)/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (2) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (2) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (3) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (3) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (4) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (4) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (5) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (5) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (6) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (6) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (4) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (5) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (6) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (2) * (16384) + (7) * (2048) + (7) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (4608) + (2) * (1536) + (7) * (192))/16))), ~((uint32_t)0), (16), (12), 16, 16);
        }
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 16]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (208)/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 32]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (208))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 48]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (208))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 64]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (208))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 80]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (208))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 96]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (208))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (100352) + (orow_i + 14 * orow_o) * (3584) + (16) * (128) + 112]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (208))/16)), (16), (12) );
      }
    }
  }
  gemm_acc_free((uint32_t)(res));
  gemm_free((uint64_t)(w_s));
  gemm_free((uint64_t)(i_s));
}
}

// conv_17_cpu(
//     output : i8[4, 28, 28, 128] @DRAM,
//     bias : i32[1, 128] @DRAM,
//     inp : i8[4, 30, 30, 128] @DRAM,
//     weights : i8[3, 3, 128, 128] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_17_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
EXO_ASSUME(28 == 30 - 3 + 1);
for (int_fast32_t b = 0; b < 4; b++) {
  for (int_fast32_t orow = 0; orow < 28; orow++) {
    for (int_fast32_t ocol = 0; ocol < 28; ocol++) {
      for (int_fast32_t och = 0; och < 128; och++) {
        int32_t res;
        res = bias[och];
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
            for (int_fast32_t kch = 0; kch < 128; kch++) {
              int8_t w_s;
              w_s = weights[krow * 49152 + kcol * 16384 + kch * 128 + och];
              int8_t i_s;
              i_s = inp[b * 115200 + (orow + krow) * 3840 + (ocol + kcol) * 128 + kch];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_int8_t((int8_t)tmp_res2);
        }
        output[b * 100352 + orow * 3584 + ocol * 128 + och] = tmp_res2;
      }
    }
  }
}
}

// conv_3(
//     output : i8[4, 56, 56, 64] @DRAM,
//     bias : i32[1, 64] @DRAM,
//     inp : i8[4, 58, 58, 64] @DRAM,
//     weights : i8[3, 3, 64, 64] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_3( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
gemmini_extended_config_st((64), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((64), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 3 * 30 * sizeof(int8_t)));
int8_t *i_s_1 = (int8_t*) ((uint64_t)gemm_malloc (16 * 8 * 4 * 3 * 30 * sizeof(int8_t)));
int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 4 * 3 * 3 * sizeof(int8_t)));
int8_t *w_s_1 = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 4 * 3 * 3 * sizeof(int8_t)));
int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 16 * 4 * sizeof(int32_t)));
int32_t *res_1 = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 9 * 4 * sizeof(int32_t)));
for (int_fast32_t b = 0; b < 4; b++) {
  for (int_fast32_t ocol_o = 0; ocol_o < 3; ocol_o++) {
    for (int_fast32_t orow_o = 0; orow_o < 2; orow_o++) {
      for (int_fast32_t orow_io = 0; orow_io < 4; orow_io++) {
        for (int_fast32_t orow_ii = 0; orow_ii < 7; orow_ii++) {
          gemmini_extended_mvin( ((uint64_t) &bias[0]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[16]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[32]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[48]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))), 16, (16) );
          for (int_fast32_t krow = 0; krow < 3; krow++) {
            for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
              if (ocol_o == 0) {
                if (b == 0) {
                  if (orow_o == 0) {
                    if (orow_ii + 7 * orow_io == 0) {
                      for (int_fast32_t kch_o = 0; kch_o < 4; kch_o++) {
                        gemmini_extended_mvin2( &weights[(krow) * (12288) + (kcol) * (4096) + (16 * kch_o) * (64)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024))/16))), 16*(4), (16) );
                      }
                    }
                  }
                }
              }
              if (orow_ii + 7 * orow_io == 0 || krow == 2) {
                gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(b) * (215296) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (3712) + (kcol + 16 * ocol_o) * (64)], { 64, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(b) * (215296) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (3712) + (kcol + 16 * ocol_o) * (64)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3072) + (kcol) * (1024))/16))), 16*(4), (16) );
              }
              for (int_fast32_t kch_o = 0; kch_o < 4; kch_o++) {
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3072) + (kcol) * (1024) + (kch_o) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3072) + (kcol) * (1024) + (kch_o) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3072) + (kcol) * (1024) + (kch_o) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3072) + (kcol) * (1024) + (kch_o) * (256))/16))), ~((uint32_t)0), (16), (16), 16, 16);
              }
            }
          }
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (16 * ocol_o) * (64)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (0)/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (16 * ocol_o) * (64) + 16]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + (256)/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (16 * ocol_o) * (64) + 32]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (256))/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (16 * ocol_o) * (64) + 48]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (256))/16)), (16), (16) );
        }
      }
    }
  }
  for (int_fast32_t orow_o = 0; orow_o < 2; orow_o++) {
    for (int_fast32_t orow_io = 0; orow_io < 4; orow_io++) {
      for (int_fast32_t orow_ii = 0; orow_ii < 7; orow_ii++) {
        gemmini_extended_mvin( ((uint64_t) &bias[0]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (0)/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[16]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (144)/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[32]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (144))/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[48]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (144))/16))), 16, (8) );
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
            if (b == 0) {
              if (orow_o == 0) {
                if (orow_ii + 7 * orow_io == 0) {
                  for (int_fast32_t kch_o = 0; kch_o < 4; kch_o++) {
                    gemmini_extended_mvin2( &weights[(krow) * (12288) + (kcol) * (4096) + (16 * kch_o) * (64)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024))/16))), 16*(4), (16) );
                  }
                }
              }
            }
            if (orow_ii + 7 * orow_io == 0 || krow == 2) {
              gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(b) * (215296) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (3712) + (48 + kcol) * (64)], { 64, 1 } }).strides[0]*1, 1.0f, 0, (8), 2);
gemmini_extended_mvin3( &inp[(b) * (215296) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (3712) + (48 + kcol) * (64)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (1536) + (kcol) * (512))/16))), 16*(4), (8) );
            }
            for (int_fast32_t kch_o = 0; kch_o < 4; kch_o++) {
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (0)/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (1536) + (kcol) * (512) + (kch_o) * (128))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (144)/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (1536) + (kcol) * (512) + (kch_o) * (128))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (144))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (1536) + (kcol) * (512) + (kch_o) * (128))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (12288) + (kcol) * (4096) + (kch_o) * (1024) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (144))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (1536) + (kcol) * (512) + (kch_o) * (128))/16))), ~((uint32_t)0), (16), (8), 16, 16);
            }
          }
        }
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (48) * (64)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (0)/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (48) * (64) + 16]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + (144)/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (48) * (64) + 32]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (144))/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (200704) + (orow_ii + 7 * orow_io + 28 * orow_o) * (3584) + (48) * (64) + 48]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (144))/16)), (16), (8) );
      }
    }
  }
}
gemm_acc_free((uint32_t)(res_1));
gemm_acc_free((uint32_t)(res));
gemm_free((uint64_t)(w_s_1));
gemm_free((uint64_t)(w_s));
gemm_free((uint64_t)(i_s_1));
gemm_free((uint64_t)(i_s));
}

// conv_30(
//     output : i8[4, 14, 14, 256] @DRAM,
//     bias : i32[1, 256] @DRAM,
//     inp : i8[4, 16, 16, 256] @DRAM,
//     weights : i8[3, 3, 256, 256] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_30( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
gemmini_extended_config_st((256), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((256), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 14 * 16 * 3 * 9 * sizeof(int8_t)));
int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 16 * 3 * 3 * sizeof(int8_t)));
int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 15 * 4 * 7 * sizeof(int32_t)));
for (int_fast32_t och_out = 0; och_out < 4; och_out++) {
  for (int_fast32_t b = 0; b < 4; b++) {
    for (int_fast32_t orow_o = 0; orow_o < 2; orow_o++) {
      for (int_fast32_t orow_i = 0; orow_i < 7; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[64 * och_out]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960))/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[16 + 64 * och_out]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + 240)/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[32 + 64 * och_out]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (2) * (240))/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[48 + 64 * och_out]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (3) * (240))/16))), 16, (14) );
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
            if (b == 0) {
              if (orow_o == 0) {
                if (orow_i == 0) {
                  for (int_fast32_t kch_o = 0; kch_o < 16; kch_o++) {
                    gemmini_extended_mvin2( &weights[(krow) * (196608) + (kcol) * (65536) + (16 * kch_o) * (256) + 64 * och_out], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (kcol) * (16384) + (kch_o) * (1024))/16))), 16*(4), (16) );
                  }
                }
              }
            }
            if (orow_i == 0 || krow == 2) {
              gemmini_extended4_config_ld(((struct exo_win_2i8c){ &inp[(b) * (65536) + (krow + orow_i + 7 * orow_o) * (4096) + (kcol) * (256)], { 256, 1 } }).strides[0]*1, 1.0f, 0, (14), 2);
gemmini_extended_mvin3( &inp[(b) * (65536) + (krow + orow_i + 7 * orow_o) * (4096) + (kcol) * (256)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (10752) + (kcol) * (3584))/16))), 16*(16), (14) );
            }
            for (int_fast32_t kch_o = 0; kch_o < 16; kch_o++) {
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (kcol) * (16384) + (kch_o) * (1024))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (10752) + (kcol) * (3584) + (kch_o) * (224))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (kcol) * (16384) + (kch_o) * (1024) + 256)/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + 240)/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (10752) + (kcol) * (3584) + (kch_o) * (224))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (kcol) * (16384) + (kch_o) * (1024) + (2) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (2) * (240))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (10752) + (kcol) * (3584) + (kch_o) * (224))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (49152) + (kcol) * (16384) + (kch_o) * (1024) + (3) * (256))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (3) * (240))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (10752) + (kcol) * (3584) + (kch_o) * (224))/16))), ~((uint32_t)0), (16), (14), 16, 16);
            }
          }
        }
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (50176) + (orow_i + 7 * orow_o) * (3584) + 64 * och_out]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960))/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (50176) + (orow_i + 7 * orow_o) * (3584) + 16 + 64 * och_out]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + 240)/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (50176) + (orow_i + 7 * orow_o) * (3584) + 32 + 64 * och_out]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (2) * (240))/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (50176) + (orow_i + 7 * orow_o) * (3584) + 48 + 64 * och_out]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (960) + (3) * (240))/16)), (16), (14) );
      }
    }
  }
}
gemm_acc_free((uint32_t)(res));
gemm_free((uint64_t)(w_s));
gemm_free((uint64_t)(i_s));
}

// conv_30_cpu(
//     output : i8[4, 14, 14, 256] @DRAM,
//     bias : i32[1, 256] @DRAM,
//     inp : i8[4, 16, 16, 256] @DRAM,
//     weights : i8[3, 3, 256, 256] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_30_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
EXO_ASSUME(14 == 16 - 3 + 1);
for (int_fast32_t b = 0; b < 4; b++) {
  for (int_fast32_t orow = 0; orow < 14; orow++) {
    for (int_fast32_t ocol = 0; ocol < 14; ocol++) {
      for (int_fast32_t och = 0; och < 256; och++) {
        int32_t res;
        res = bias[och];
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
            for (int_fast32_t kch = 0; kch < 256; kch++) {
              int8_t w_s;
              w_s = weights[krow * 196608 + kcol * 65536 + kch * 256 + och];
              int8_t i_s;
              i_s = inp[b * 65536 + (orow + krow) * 4096 + (ocol + kcol) * 256 + kch];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_int8_t((int8_t)tmp_res2);
        }
        output[b * 50176 + orow * 3584 + ocol * 256 + och] = tmp_res2;
      }
    }
  }
}
}

// conv_3_cpu(
//     output : i8[4, 56, 56, 64] @DRAM,
//     bias : i32[1, 64] @DRAM,
//     inp : i8[4, 58, 58, 64] @DRAM,
//     weights : i8[3, 3, 64, 64] @DRAM,
//     act : bool,
//     scale : f32 @DRAM
// )
void conv_3_cpu( test_case_Context *ctxt, int8_t* output, const int32_t* bias, const int8_t* inp, const int8_t* weights, bool act, const float* scale ) {
EXO_ASSUME(56 == 58 - 3 + 1);
for (int_fast32_t b = 0; b < 4; b++) {
  for (int_fast32_t orow = 0; orow < 56; orow++) {
    for (int_fast32_t ocol = 0; ocol < 56; ocol++) {
      for (int_fast32_t och = 0; och < 64; och++) {
        int32_t res;
        res = bias[och];
        for (int_fast32_t krow = 0; krow < 3; krow++) {
          for (int_fast32_t kcol = 0; kcol < 3; kcol++) {
            for (int_fast32_t kch = 0; kch < 64; kch++) {
              int8_t w_s;
              w_s = weights[krow * 12288 + kcol * 4096 + kch * 64 + och];
              int8_t i_s;
              i_s = inp[b * 215296 + (orow + krow) * 3712 + (ocol + kcol) * 64 + kch];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_int8_t((int8_t)tmp_res2);
        }
        output[b * 200704 + orow * 3584 + ocol * 64 + och] = tmp_res2;
      }
    }
  }
}
}


/* relying on the following instruction..."
do_ld_acc_i32_vector(n,src,dst)
gemmini_extended_mvin( ((uint64_t) &{src_data}), ((uint32_t) &{dst_data}), 16, {n} );
*/

/* relying on the following instruction..."
do_ld_i8_block_id1(n,m,src,dst)
gemmini_extended_mvin2( &{src_data}, ((uint64_t) &{dst_data}), 16*{m}, {n} );
*/

/* relying on the following instruction..."
do_matmul_acc_i8(N,M,K,A,B,C)
gemmini_extended_preload((uint32_t)(&{B_data}), (uint32_t)(&{C_data}) | 0x40000000, {M}, {K}, {M}, {N});
gemmini_extended_compute_preloaded((uint32_t)(&{A_data}), ~((uint32_t)0), {K}, {N}, 16, 16);
*/

/* relying on the following instruction..."
do_st_acc_i8(n,m,src,dst)
gemmini_extended_mvout( ((uint64_t) &{dst_data}), (uint32_t) &{src_data}, {m}, {n} );
*/

/* relying on the following instruction..."
ld_i8_block_id2(n,m,src,dst)
gemmini_extended4_config_ld({src}.strides[0]*1, 1.0f, 0, {n}, 2);
gemmini_extended_mvin3( &{src_data}, ((uint64_t) &{dst_data}), 16*{m}, {n} );
*/
