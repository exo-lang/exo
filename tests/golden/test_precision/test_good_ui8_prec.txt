
#include <stdint.h>
#include <stdbool.h>

// Compiler feature macros adapted from Hedley (public domain)
// https://github.com/nemequ/hedley

#if defined(__has_builtin)
#  define EXO_HAS_BUILTIN(builtin) __has_builtin(builtin)
#else
#  define EXO_HAS_BUILTIN(builtin) (0)
#endif

#if EXO_HAS_BUILTIN(__builtin_assume)
#  define EXO_ASSUME(expr) __builtin_assume(expr)
#elif EXO_HAS_BUILTIN(__builtin_unreachable)
#  define EXO_ASSUME(expr) \
      ((void)((expr) ? 1 : (__builtin_unreachable(), 1)))
#else
#  define EXO_ASSUME(expr) ((void)(expr))
#endif


#include <stdio.h>
#include <stdlib.h>


// hoge(
//     n : size,
//     x : ui8[n] @DRAM,
//     y : ui8 @DRAM
// )
void hoge( void *ctxt, int_fast32_t n, uint8_t* x, const uint8_t* y );


// hoge(
//     n : size,
//     x : ui8[n] @DRAM,
//     y : ui8 @DRAM
// )
void hoge( void *ctxt, int_fast32_t n, uint8_t* x, const uint8_t* y ) {
for (int_fast32_t i = 0; i < n; i++) {
  x[i] = *y;
}
}

